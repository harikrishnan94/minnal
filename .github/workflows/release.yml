name: Release

on:
  push:
    tags:
      - "v*"
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

env:
  CMAKE_GENERATOR: Ninja

jobs:
  package:
    name: Package (${{ matrix.os }}, ${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            compiler: gcc
          - os: macos-latest
            compiler: clang

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup compiler toolchain
        uses: ./.github/actions/setup-compiler
        with:
          compiler: ${{ matrix.compiler }}
          gcc-version: "14"
          llvm-version: "20"

      - name: Setup PostgreSQL (headers + pg_config)
        uses: ./.github/actions/setup-postgres
        with:
          pg-major: "17"

      - name: Configure (Release + IPO/LTO)
        shell: bash
        run: |
          EXTRA_CFG=()
          if [[ "$RUNNER_OS" != "Windows" ]]; then
            EXTRA_CFG+=(-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache)
          fi
          cmake -S . -B build \
            -G "${CMAKE_GENERATOR}" \
            -DCMAKE_BUILD_TYPE=Release \
            -DMINNAL_ENABLE_IPO=ON \
            -DPG_CONFIG="${PG_CONFIG}" \
            -DCMAKE_C_COMPILER="${CC}" \
            -DCMAKE_CXX_COMPILER="${CXX}" \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            "${EXTRA_CFG[@]}"

      - name: Build
        run: cmake --build build -j

      - name: Install (Linux/macOS)
        shell: bash
        run: sudo cmake --install build

      - name: Test
        run: ctest --test-dir build --output-on-failure

      - name: Package (CPack)
        shell: bash
        run: |
          cmake --build build --target package
          echo "Generated packages in build/:"
          ls -la build | sed -n 's/.*\(tar\.gz\|zip\)$/\0/p' || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: minnal-packages-${{ matrix.os }}
          path: |
            build/*.tar.gz
            build/*.zip
          if-no-files-found: warn

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            build/*.tar.gz
            build/*.zip
