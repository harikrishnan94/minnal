# Copyright (c) Harikrishnan Prabakaran (harikrishnanprabakaran@gmail.com)
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CMAKE_GENERATOR: Ninja

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }}, ${{ matrix.compiler }}, ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-latest]
        compiler: [gcc, clang-libc++]
        build_type: [Debug, RelWithDebInfo]
        exclude:
          - os: macos-latest
            compiler: clang-libc++
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Linux CI script
        if: runner.os == 'Linux'
        shell: bash
        run: bash scripts/ci-linux.sh --compiler "${{ matrix.compiler }}" --build-type "${{ matrix.build_type }}"

      - name: Run macOS CI script
        if: runner.os == 'macOS'
        shell: bash
        run: bash scripts/ci-macos.sh --compiler "${{ matrix.compiler }}" --build-type "${{ matrix.build_type }}"

      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: |
            build/Testing/Temporary/LastTest.log
            build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeError.log
          if-no-files-found: ignore

      - name: Upload full build dir (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-tree-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: build
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6

  static-analysis:
    name: Static Analysis (clang-format, clang-tidy)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run static analysis script
        shell: bash
        run: bash scripts/ci-static-analysis.sh --build-type Debug

      - name: Upload full build dir (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-tree-static-analysis
          path: build
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6

  sanitizers:
    name: Sanitizers ("${{ matrix.sanitizer }}", ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: build-test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        sanitizer: [asan, ubsan, tsan, msan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run sanitizer script
        shell: bash
        run: bash scripts/ci-sanitizers.sh --sanitizer "${{ matrix.sanitizer }}" --build-type Debug

      - name: Upload full build dir (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-tree-${{ matrix.os }}-${{ matrix.sanitizer }}
          path: build-san
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6

  coverage:
    name: Coverage (GCC, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: build-test
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run coverage script
        shell: bash
        run: bash scripts/ci-coverage.sh --build-type Debug

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}
          path: coverage.xml

      - name: Upload to Codecov (attempt 1)
        id: codecov_attempt1
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true
          os: ${{ runner.arch == 'ARM64' && 'linux-arm64' || 'linux' }}
          use_oidc: true

      - name: Upload to Codecov (attempt 2)
        id: codecov_attempt2
        if: steps.codecov_attempt1.outcome == 'failure'
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true
          os: ${{ runner.arch == 'ARM64' && 'linux-arm64' || 'linux' }}
          use_oidc: true

      - name: Upload to Codecov (legacy fallback)
        id: codecov_legacy
        if: steps.codecov_attempt2.outcome == 'failure'
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true
          os: ${{ runner.arch == 'ARM64' && 'linux-arm64' || 'linux' }}
          use_oidc: true
          use_legacy_upload_endpoint: true

      - name: Verify Codecov upload
        if: steps.codecov_attempt1.outcome == 'failure' && (steps.codecov_attempt2.outcome == 'failure' || steps.codecov_attempt2.outcome == 'skipped') && (steps.codecov_legacy.outcome == 'failure' || steps.codecov_legacy.outcome == 'skipped')
        run: |
          echo "Codecov upload failed after multiple attempts" >&2

      - name: Upload full build dir (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-tree-cov-${{ matrix.os }}
          path: build-cov
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6
