name: Setup compiler toolchain
description: Install and select the requested compiler and basic build tooling
inputs:
  compiler:
    description: "gcc or clang"
    required: true
    default: gcc
  gcc-version:
    description: "GCC version to install/select"
    required: false
    default: "14"
  llvm-version:
    description: "LLVM/Clang version to install/select"
    required: false
    default: "20"
runs:
  using: composite
  steps:
    - name: Install LLVM toolchain
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: ${{ inputs.llvm-version }}

    - name: Setup compiler and tools
      shell: bash
      run: |
        set -euo pipefail

        echo "Requested compiler: '${{ inputs.compiler }}' on OS: ${RUNNER_OS}"

        if [[ "${RUNNER_OS}" == "Linux" ]]; then
          # Always install common build tools on Linux
          sudo apt-get update
          sudo apt-get install -y ninja-build ccache jq cmake
          if [[ "${{ inputs.compiler }}" == "gcc" ]]; then
            sudo apt-get install -y gcc-${{ inputs.gcc-version }} g++-${{ inputs.gcc-version }}
            echo "CC=gcc-${{ inputs.gcc-version }}" >> "$GITHUB_ENV"
            echo "CXX=g++-${{ inputs.gcc-version }}" >> "$GITHUB_ENV"
          fi

        elif [[ "${RUNNER_OS}" == "macOS" ]]; then
          if [[ "${{ inputs.compiler }}" == "clang" ]]; then
            brew update
            brew install ninja ccache jq cmake
            echo "$(brew --prefix ccache)/libexec" >> "$GITHUB_PATH"
            if command -v llvm-config &>/dev/null; then
              BINDIR="$(llvm-config --bindir)"
              echo "CC=${BINDIR}/clang" >> "$GITHUB_ENV"
              echo "CXX=${BINDIR}/clang++" >> "$GITHUB_ENV"
            else
              echo "CC=clang" >> "$GITHUB_ENV"
              echo "CXX=clang++" >> "$GITHUB_ENV"
            fi
          else
            echo "No compiler setup performed for macOS with compiler='${{ inputs.compiler }}'"
          fi

        else
          echo "Unsupported OS: ${RUNNER_OS}" >&2
          exit 1
        fi

        echo "CC from env: ${CC:-unset}"
        echo "CXX from env: ${CXX:-unset}"
